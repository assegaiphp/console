#!/usr/bin/env php

<?php

use Assegai\Console\Commands\Config;
use Assegai\Console\Commands\Database\DatabaseConfigure;
use Assegai\Console\Commands\Database\DatabaseLoad;
use Assegai\Console\Commands\Database\DatabaseSeed;
use Assegai\Console\Commands\Database\DatabaseSetup;
use Assegai\Console\Commands\DumpAutoload;
use Assegai\Console\Commands\Generate;
use Assegai\Console\Commands\Info;
use Assegai\Console\Commands\Migration\MigrationCreate;
use Assegai\Console\Commands\Migration\MigrationDown;
use Assegai\Console\Commands\Migration\MigrationList;
use Assegai\Console\Commands\Migration\MigrationRedo;
use Assegai\Console\Commands\Migration\MigrationRefresh;
use Assegai\Console\Commands\Migration\MigrationSetup;
use Assegai\Console\Commands\Migration\MigrationUp;
use Assegai\Console\Commands\NewProject;
use Assegai\Console\Commands\Serve;
use Assegai\Console\Commands\Test;
use Assegai\Console\Commands\Update;
use Assegai\Console\Commands\Version;
use Symfony\Component\Console\Application;

if (file_exists(__DIR__ . '/../vendor/autoload.php'))
{
  require __DIR__ . '/../vendor/autoload.php';
}
else
{
  require __DIR__ . '/../../../autoload.php';
}
/**
 * Bootstrap the application
 *
 * @return void
 */
function bootstrap(): void
{
  try {
    $app = new Application('Assegai CLI');
    $app
      ->addCommands([
        new Config(),
        new DatabaseConfigure(),
        new DatabaseLoad(),
        new DatabaseSeed(),
        new DatabaseSetup(),
        new DumpAutoload(),
        new Generate(),
        new MigrationCreate(),
        new MigrationList(),
        new MigrationUp(),
        new MigrationDown(),
        new MigrationRefresh(),
        new MigrationSetup(),
        new MigrationRedo(),
        new NewProject(),
        new Info(),
        new Serve(),
        new Test(),
        new Update(),
        new Version(),
      ]);
    $app->setDefaultCommand('info');

    $app->run();
  } catch (Exception $e) {
    echo $e->getMessage();
    exit(1);
  }
}

bootstrap();